void handleWebRequest()
{
	// listen for incoming clients
      EthernetClient client = server.available();
      for(int i=0;i<110;i++)page[i]=' '; //Char array/string
      if (client) {
      int count=0;
      int storeRequest=0;

      // an http request ends with a blank line
      boolean currentLineIsBlank = false;
      while (client.connected()) {
         if (client.available()) {
            char c = client.read();
            if(storeRequest==1)
               page[count++]=c; //Char array/string
            if(c=='/' && storeRequest!=2)
               storeRequest=1;
            if(c==' ' && storeRequest)
               storeRequest=2;
               
            // if you've gotten to the end of the line (received a newline
            // character) and the line is blank, the http request has ended,
            // so you can send a reply
            if (c == '\n' && currentLineIsBlank) {
               //Status
               if(page[0]==' ') //Char array/String
               {
                  MODE=AUTO_MODE;
                  // send a standard http response header
                  client.println("HTTP/1.1 200 OK");
                  client.println("Content-Type: text/html");
                  client.println("Connection: close"); // the connection will be closed after completion of the response
                  client.println();
                  //Send page to client
                  sendStatusPage(client);
               }
               
               //Manual
               else if(page[0]=='m') //Char array/String
               {
                  //New state set //The seemingly random indexes are the places where values will be present when data is sent through the correct format.
                  if(page[11]=='?') //Char array/String
                  {
                     for(int i=0;i<5;i++)value[i]=' '; //Char array/String
                     
                     //Set light on or off
                     value[0]=page[24]; //Char array/String
                     if(value[0]=='1') //Char array/String
                        L->on();
                     else
                        L->off();
                        
                     for(int i=0;i<5;i++)value[i]=' '; //Char array/String
                     
                     //Set brightness
                     value[0]=page[42];
                     if(value[0]=='0')
                        L->off();
                     else if(value[0]=='1')
                        L->dim(1);
                     else if(value[0]=='2')
                        L->dim(2);
                     else
                        L->dim(3);
                     
                     for(int i=0;i<5;i++)value[i]=' '; //Char array/String
                     
                     //Set fan state
                     value[0]=page[54];
                     if(value[0]=='1') //Char array/String
                        F1->on();
                     else
                        F1->off();
                     
                     for(int i=0;i<5;i++)value[i]=' '; //Char array/String
                     
                     //Set fan speed
                     value[0]=page[65];
                     if(value[0]=='0') //Char array/String
                        F1->off();
                     else if(value[0]=='1')
                        F1->regulate(1);
                     else if(value[0]=='2')
                        F1->regulate(2);
                     else 
                        F1->regulate(3);
                     
                     for(int i=0;i<5;i++)value[i]=' '; //Char array/String
                     
                     //Set AC
                     value[0]=page[76];
                     if(value[0]=='0') //Char array/String
                        AC1->off();
                     else
                     {
                        value[1]=page[92];   //Temperature
                        value[2]=page[93];   //Temperature
                        value[3]=page[103];
                        byte reqTemp=((byte)value[1]-48)*10 + ((byte)value[2]-48);
                        byte reqSpeed=(byte)value[3]-48;
                        AC1->set(reqTemp,reqSpeed);
                     }
                  }
                  MODE=MANUAL_MODE;
                  // send a standard http response header
                  client.println("HTTP/1.1 200 OK");
                  client.println("Content-Type: text/html");
                  client.println("Connection: close"); // the connection will be closed after completion of the response
                  client.println();
                  //Send page to client
                  sendManualPage(client);
               }
               break;
            }
            if (c == '\n') {
               // you're starting a new line
               currentLineIsBlank = true;
            }
            else if (c != '\r') {
               // you've gotten a character on the current line
               currentLineIsBlank = false;
            }
         }
      }
      // give the web browser time to receive the data
      delay(1);
      // close the connection:
      client.stop();
   }
}

void lightRecommend(EthernetClient cl)
{
    if(LIGHT_INTENSITY<LIGHT_THRESHOLD)   //dim(1) means highly dim, dim(3) is very bright
    {
       cl.println("On at brightness ");
      if(LIGHT_INTENSITY<L1)
         cl.println("1</p>");
      else if(LIGHT_INTENSITY<L2)
         cl.println("2</p>");
      else if(LIGHT_INTENSITY<L3)
         cl.println("3</p>");
    }
    else
      cl.println("Off</p>");
}

void fanRecommend(EthernetClient cl)
{
   if(TEMPERATURE>FAN_CUTOFF)
      cl.println("Off</p>");
    
   else if(TEMPERATURE<AC_CUTOFF)
   {
      if(TEMPERATURE>T1)
      {
         cl.println("On at speed ");
         if(TEMPERATURE>T5||HUMIDITY>RH_THRESHOLD)   
            cl.println("5</p>");
         else if(TEMPERATURE>T4)
            cl.println("4</p>");
         else if(TEMPERATURE>T3)
            cl.println("3</p>");
         else if(TEMPERATURE>T2)
            cl.println("2</p>");
         else 
            cl.println("1</p>");
      }
      else 
         cl.println("Off</p>");
   }
}

void ACRecommend(EthernetClient cl)
{
   if(TEMPERATURE>FAN_CUTOFF)
    {
       cl.println("On at temperature ");
       cl.println(AC_AMBIENT_TEMP);
       cl.println(" and fan speed ");
       cl.println(DEFAULT_AC_FAN_SPEED);
       cl.println("</p>");
    }
    
    else
      cl.println("Off</p>");
}

void sendManualPage(EthernetClient cl)
{
   cl.println("<!DOCTYPE html");
   cl.println("<html>");
   cl.println("<head>");
   cl.println("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />");
   cl.println("<title>Manual Mode</title>");
   cl.println("</head>");
   cl.println("<body>");
   cl.println("<h1>Currently in manual mode. Go to the auto mode page to set it to auto and/or change the auto mode settings.</h1>"); 
   cl.println("<form method=\"get\">");
   
   cl.println("<h2>Light</h2>");
   if(L->getState()==ON) //Light on/off
   {
      cl.println("<input type=\"radio\" id=\"lightOnButton\" value=\"1\" name=\"lightButton\" checked=\"checked\"/>On");
      cl.println("<input type=\"radio\" id=\"lightOffButton\" value=\"0\" name=\"lightButton\"/>Off");
   }
   else
   {
      cl.println("<input type=\"radio\" id=\"lightOnButton\" value=\"1\" name=\"lightButton\" />On");
      cl.println("<input type=\"radio\" id=\"lightOffButton\" value=\"0\" name=\"lightButton\" checked=\"checked\"/>Off");
   }
   cl.println("<br/>");
   
   cl.println("Brightness:<input type=\"number\" id=\"lightBrightness\" name=\"lightBrightness\" min=\"0\" max=\"3\" "); //Brightness
   if(L->getState()==OFF)
      cl.println("value=\"0\" />");
   else if(L->getDimLevel()==1)
      cl.println("value=\"1\" />");
   else if(L->getDimLevel()==2)
      cl.println("value=\"2\" />");
   else 
      cl.println("value=\"3\" />");
      
   cl.println("<p id=\"lightStatus\">Current status is"); //Brightness
   if(L->getState()==ON)
   {
      cl.println("on at brightness ");
      if(L->getDimLevel()==1)
         cl.println("1</p>");
      else if(L->getDimLevel()==2)
         cl.println("2</p>");
      else
         cl.println("3</p>");
   }
   else
      cl.println("off</p>");
      
   cl.println("<p id=\"ldrReading\">LDR reading is");
   cl.println(LIGHT_INTENSITY); 
   cl.println("</p>");
   cl.println("<p id=\"lightRecommended\">Recommended:"); //Light Recommended
   lightRecommend(cl);
   
   cl.println("<input type=\"submit\" />");
   
   cl.println("<br /><br />");
   cl.println("<h1>Fan</h1>");
   if(F1->getState()==ON)  //Fan on/off
   {
      cl.println("<input type=\"radio\" id=\"fanOnButton\" name=\"fanButton\" value=\"1\" checked=\"checked\"/>On");
      cl.println("<input type=\"radio\" id=\"fanOffButton\" name=\"fanButton\" value=\"0\" />Off");
   }
   else
   {
      cl.println("<input type=\"radio\" id=\"fanOnButton\" name=\"fanButton\" value=\"1\"/>On");
      cl.println("<input type=\"radio\" id=\"fanOffButton\" name=\"fanButton\" value=\"0\" checked=\"checked\"/>Off");
   }
   cl.println("<br />");
   
   cl.println("Speed:<input type=\"number\" id=\"fanSpeed\" name=\"fanSpeed\" min=\"0\" max=\"3\" "); //Fan speed
   if(F1->getState()==OFF)
      cl.println("value=\"1\" />");
   else if(F1->getSpeed()==1)
      cl.println("value=\"1\" />");
   else if(F1->getSpeed()==2)
      cl.println("value=\"2\" />");
   else 
      cl.println("value=\"3\" />");
   
   cl.println("<p id=\"fanStatus\">Current status is ");
   if(F1->getState()==ON)
   {
      cl.println("on at speed ");
      if(F1->getSpeed()==1)
         cl.println("1</p>");
      else if(F1->getSpeed()==2)
         cl.println("2</p>");
      else
         cl.println("3</p>");
   }
   else
      cl.println("off</p>");
      
   cl.println("<p id=\"temperatureReading\">Temperature is ");
   cl.println(TEMPERATURE);
   cl.println("Â°C</p>");
   
   cl.println("<p id=\"humidityReading\">Humidity is ");
   cl.println(HUMIDITY);
   cl.println("%</p>");
   
   cl.println("<p id=\"fanRecommended\">Recommended:");
   fanRecommend(cl);
   
   cl.println("<input type=\"submit\" />");
   
   //AC
   cl.println("<br /><br />");
   cl.println("<h1>AC</h1>");
   
   if(AC1->getState()==ON)
   {
      cl.println("<input type=\"radio\" id=\"ACOnButton\" name=\"ACButton\" value=\"1\" checked=\"checked\"/>On");
      cl.println("<input type=\"radio\" id=\"ACOffButton\" name=\"ACButton\" value=\"0\" />Off");
   }
   else
   {
      cl.println("<input type=\"radio\" id=\"ACOnButton\" name=\"ACButton\" value=\"1\" />On");
      cl.println("<input type=\"radio\" id=\"ACOffButton\" name=\"ACButton\" value=\"0\" checked=\"checked\"/>Off");
   }
   cl.println("<br />");
   
   cl.println("Temperature:<input type=\"number\" id=\"ACTemperature\" name=\"ACTemperature\" min=\"18\" max=\"30\" value=\""); 
   cl.println(AC1->getTemp());
   cl.println("\" />");
   cl.println("<br />");
   
   cl.println("Fan speed:<input type=\"number\" id=\"ACSpeed\" name=\"ACSpeed\" min=\"1\" max=\"3\" value=\"");
   cl.println(AC1->getFanSpeed());
   cl.println("\" />");
   
   cl.println("<p id=\"ACStatus\">Current status is ");
   if(AC1->getState()==ON)
   {
      cl.println("on at temperature ");
      cl.println((int)AC1->getTemp());
      cl.println(" and fan speed ");
      cl.println(AC1->getFanSpeed());
      cl.println("</p>");
   }
   else 
      cl.println("off</p>");
      
   cl.println("<p id=\"temperatureReading\">Temperature is ");
   cl.println(TEMPERATURE);
   cl.println("Â°C</p>");
   
   cl.println("<p id=\"humidityReading\">Humidity is ");
   cl.println(HUMIDITY);
   cl.println("%</p>");
   
   cl.println("<p id=\"ACRecommended\">Recommended:");
   ACRecommend(cl);
   
   cl.println("<input type=\"submit\" />");

   cl.println("<br /><br />");

   cl.println("<input type=\"button\" id=\"refreshButton\" value=\"Refresh\" onclick=\"window.location.reload()\" />");
   cl.println("<input type=\"button\" id=\"autoButton\" value=\"Auto mode\" />");
   cl.println("<input type=\"button\" id=\"backButton\" value=\"Back\" onclick=\"window.location='/'\"/>");
   cl.println("</form>");
   cl.println("</body>");
   cl.println("</html>");
}

void sendStatusPage(EthernetClient cl)
{
   cl.println("<!DOCTYPE html>");
   cl.println("<html>");
   cl.println("<head>");
   cl.println("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />");
   cl.println("<title>Status</title>");
   cl.println("</head>");
   cl.println("<body>");
   cl.println("<h1>Currently in auto mode. Go to manual mode to set to manual mode. Go to auto mode to set to auto mode and/or change auto mode settings.</h1>"); 
   
   //Light
   cl.println("<h2>Light</h2>");
   cl.println("<br />");
   
   cl.println("<p id=\"lightStatus\">Current status is"); //Brightness
   if(L->getState()==ON)
   {
      cl.println("on at brightness ");
      if(L->getDimLevel()==1)
         cl.println("1</p>");
      else if(L->getDimLevel()==2)
         cl.println("2</p>");
      else
         cl.println("3</p>");
   }
   else
      cl.println("off</p>");

   cl.println("<p id=\"ldrReading\">LDR reading is");
   cl.println(LIGHT_INTENSITY); 
   cl.println("</p>");
   cl.println("<p id=\"lightRecommended\">Recommended:"); //Light Recommended
   lightRecommend(cl);
   
   //Fan
   cl.println("<br /><br />");
   cl.println("<h1>Fan</h1>");
   cl.println("<br/>");
   
   cl.println("<p id=\"fanStatus\">Current status is ");
   if(F1->getState()==ON)
   {
      cl.println("on at speed ");
      if(F1->getSpeed()==1)
         cl.println("1</p>");
      else if(F1->getSpeed()==2)
         cl.println("2</p>");
      else
         cl.println("3</p>");
   }
   else
      cl.println("off</p>");
      
   cl.println("<p id=\"temperatureReading\">Temperature is ");
   cl.println(TEMPERATURE);
   cl.println("Â°C</p>");
   
   cl.println("<p id=\"humidityReading\">Humidity is ");
   cl.println(HUMIDITY);
   cl.println("%</p>");
   
   cl.println("<p id=\"fanRecommended\">Recommended:");
   fanRecommend(cl);
   
   //AC
   cl.println("<br /><br />");
   cl.println("<h1>AC</h1>");
   cl.println("<br/>");
   
   cl.println("<p id=\"ACStatus\">Current status is ");
   if(AC1->getState()==ON)
   {
      cl.println("on at temperature ");
      cl.println((int)AC1->getTemp());
      cl.println(" and fan speed ");
      cl.println(AC1->getFanSpeed());
      cl.println("</p>");
   }
   else 
      cl.println("off</p>");
      
   cl.println("<p id=\"temperatureReading\">Temperature is ");
   cl.println(TEMPERATURE);
   cl.println("Â°C</p>");
   
   cl.println("<p id=\"humidityReading\">Humidity is ");
   cl.println(HUMIDITY);
   cl.println("%</p>");
   
   cl.println("<p id=\"ACRecommended\">Recommended:");
   ACRecommend(cl);
   
   cl.println("<input type=\"button\" id=\"refreshButton\" value=\"Refresh\" onclick=\"window.location.reload()\" />");
   cl.println("<input type=\"button\" id=\"manualButton\" value=\"Manual mode\" onclick=\"window.location='/manual.html'\"/>");
   cl.println("<input type=\"button\" id=\"autoButton\" value=\"Auto mode\" />");
   cl.println("</body>");
   cl.println("</html>");
}
